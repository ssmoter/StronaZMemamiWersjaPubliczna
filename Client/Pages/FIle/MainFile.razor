@using Strona_v2.Client.Data.File.Dowloand

@inject IAPIFileDowloand _IAPIFileDowloand
@inject ILogger<MainFile> _logger


@if (_Model != null)
{
    <div>
        <div>
            <h3>@_Model.Title</h3>
            <p>@_Model.NoLike / @_Model.Spam</p>
            <p>@_Model.Description</p>
        </div>
        @if (_Model.Files.Count() - 1 > 1)
        {
            <div class="border border-dark">
                @for (var i = 0; i < _Model.Files.Count() - 1; i++)
                {
                    int Iint = i;
                    <span @onclick="@(e=>ChangeImg(Iint))">
                        <img width="80" src="@(_IAPIFileDowloand.GetFileImg(_Model.UserId,_Model.Files[i].StoredFileName,_Model.Files[i].Type,_logger))" />
                    </span>
                }
            </div>
        }
        @if (@_Model.Files.Count() - 1 > 0) 
        {
            <NavLink href="@CurrentString" style="max-height:200px;min-height:100px;">
                <span>
                    <img src="@(_IAPIFileDowloand.GetFileImg(_Model.UserId,_Model.Files[ImgId].StoredFileName,_Model.Files[ImgId].Type,_logger))" style="max-width:500px;height:auto;" />
                </span>
            </NavLink>
        }
        <div class="float-end">
            <div>
                <CommentFile _FileId=@_Id></CommentFile>
            </div>
        </div>

    </div>
}
else
{
    <a>Loading ...</a>

}







@code {
    [Parameter]
    public string? _Id { get; set; }

    private int ImgId = 0;
    private void ChangeImg(int id)
    {
        ImgId = id;
    }
    private string CurrentString = "/f/";

    private FileModelPublic? _Model;
    protected async override Task OnInitializedAsync()
    {
        _Model = await _IAPIFileDowloand.GetFileModel(_Id, _logger);
        _Model.Files = new();

        if (_Model != null)
        {
            CurrentString += _Model.Id;
            _Model.TrimNameTyp();
        }

    }
}
