@page "/"
@inject ILocalStorageService _ILocalStorageService
@inject IApiUserWithToken _IApiUserWithToken
@inject ToastService _toastService
@inject BrowserService _browserService
@inject NavigationManager _navigationManager


@if (browserDimension.Width > 640)
{
@*    <button class="btn btn-danger" @onclick="@(() => _toastService.ShowToast("I'm an ERROR message", ToastLevel.Error))">Error Toast</button>
*@    <div class="w-75">

        <div class="float-start w-75 ">
            @*Treść*@
            <Strona_v2.Client.Pages.FIle.MainFile></Strona_v2.Client.Pages.FIle.MainFile>
@*            <button class="btn btn-info" @onclick="@(() => _toastService.ShowToast("I'm an INFO message", ToastLevel.Info))">Info Toast</button>
*@        </div>
        <div class="float-start w-25">
            @*Kiedyś reklama*@

@*            <button class="btn btn-success" @onclick="@(() => _toastService.ShowToast("I'm a SUCCESS message", ToastLevel.Success))">Success Toast</button>
*@        </div>
@*        <div class="float-start w-50">

            <button class="btn btn-warning" @onclick="@(() => _toastService.ShowToast("I'm a WARNING message", ToastLevel.Warning))">Warning Toast</button>
        </div>*@
    </div>
    
}
else
{
   
}

@code {
    BrowserDimension browserDimension = new();

    protected async override Task OnInitializedAsync()
    {


        //string token = await ILocalStorageService.GetItemAsync<string>(nameof(token));
        //if (!string.IsNullOrEmpty(token))
        //{
        //    bool check = await IApiUserWithToken.UpdateLastOnline();
        //    WrongToken(check);
        //}
    }

    //private void WrongToken(bool Check)
    //{
    //    if (!Check)
    //    {
    //        navigationManager.NavigateTo("logout");
    //    }
    //}
}
